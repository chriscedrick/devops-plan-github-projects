name: Automatisation GitHub Projects

on:
  issues:
    types: [opened, assigned, closed]
  pull_request:
    types: [opened, closed]

jobs:
  manage_project:
    runs-on: ubuntu-latest

    steps:
    # Étape 1 : Vérifier le repo
    - name: Checkout code
      uses: actions/checkout@v3

    # Étape 2 : Gérer les issues
    - name: Gérer les issues dans le projet
      if: github.event_name == 'issues'
      env:
        PROJECT_ID: "PVT_kwHOBqVNNs4AvEbb"
      run: |
        set -e
        ISSUE_STATE=${{ github.event.action }}
        CONTENT_ID=${{ github.event.issue.node_id }}

        echo "État de l'issue : $ISSUE_STATE"

        if [[ "$ISSUE_STATE" == "opened" ]]; then
          gh project item-add \
            --id "$PROJECT_ID" \
            --content-id "$CONTENT_ID"
          gh project item-edit \
            --id "$PROJECT_ID" \
            --content-id "$CONTENT_ID" \
            --field "Status=Backlog"
          echo "L'issue a été ajoutée au Backlog."
        elif [[ "$ISSUE_STATE" == "assigned" ]]; then
          gh project item-edit \
            --id "$PROJECT_ID" \
            --content-id "$CONTENT_ID" \
            --field "Status=In progress"
          echo "L'issue a été déplacée à In progress."
        elif [[ "$ISSUE_STATE" == "closed" ]]; then
          gh project item-edit \
            --id "$PROJECT_ID" \
            --content-id "$CONTENT_ID" \
            --field "Status=Done"
          echo "L'issue a été marquée comme Done."
        fi

    # Étape 3 : Gérer les PRs
    - name: Gérer les Pull Requests dans le projet
      if: github.event_name == 'pull_request'
      env:
        PROJECT_ID: "PVT_kwHOBqVNNs4AvEbb"
      run: |
        set -e
        PR_STATE=${{ github.event.action }}
        CONTENT_ID=${{ github.event.pull_request.node_id }}

        echo "État de la PR : $PR_STATE"

        if [[ "$PR_STATE" == "opened" ]]; then
          gh project item-add \
            --id "$PROJECT_ID" \
            --content-id "$CONTENT_ID"
          gh project item-edit \
            --id "$PROJECT_ID" \
            --content-id "$CONTENT_ID" \
            --field "Status=In review"
          echo "La PR a été ajoutée à In review."
        elif [[ "$PR_STATE" == "closed" && "${{ github.event.pull_request.merged }}" == "true" ]]; then
          gh project item-edit \
            --id "$PROJECT_ID" \
            --content-id "$CONTENT_ID" \
            --field "Status=Done"
          echo "La PR a été marquée comme Done."
        fi
